{"version":3,"sources":["components/Tab.js","components/Tabs.js","Worldmap.js","App.js","reportWebVitals.js","index.js"],"names":["Tab","onClick","props","label","this","activeTab","className","Component","Tabs","onClickTabItem","tab","setState","state","children","map","child","Map","countriesCodes","countriesNames","data","title","color","handleColorChange","console","log","hex","handleChange","e","target","value","handleClick","countryCode","countriesCode","getCountriesNamesList","list","makeMapData","obj","CN","MX","TX","KR","forEach","countriesData","country","titleSet","backgroundColor","onRegionClick","containerClassName","containerStyle","width","height","regionStyle","initial","fill","hover","cursor","selected","blink","selectedHover","regionsSelectable","series","regions","values","scale","normalizeFunction","i","Modal","App","useState","post","viewP1","viewP1Var","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0c094db2.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Tab extends Component{\r\n    static propTypes = {\r\n        activeTab: PropTypes.string.isRequired,\r\n        label: PropTypes.string.isRequired,\r\n        onClick: PropTypes.func.isRequired,\r\n    };\r\n\r\n    onClick = () => {\r\n        const {label, onClick} = this.props;\r\n        onClick(label);\r\n    }\r\n\r\n    render(){\r\n        const {\r\n            onClick,\r\n            props: {\r\n                activeTab,\r\n                label,\r\n            },\r\n        } = this;\r\n        let className = 'tab-list-item';\r\n        if (activeTab === label){\r\n            className += ' tab-list-active';\r\n        }\r\n        return(\r\n            <li\r\n                className={className}\r\n                onClick={onClick}>{label}</li>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Tab;\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Tab from './Tab'\r\n\r\nclass Tabs extends Component{\r\n    static propTypes = {\r\n        children: PropTypes.instanceOf(Array).isRequired,\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            activeTab: this.props.children[0].props.label,\r\n        };\r\n    }\r\n\r\n    onClickTabItem = (tab) => {\r\n        this.setState({activeTab: tab})\r\n    }\r\n\r\n    render() {\r\n        const{\r\n            onClickTabItem,\r\n            props: {\r\n                children,\r\n            },\r\n            state: {\r\n                activeTab,\r\n            }\r\n        }= this;\r\n        return(\r\n            <div className=\"tabs\">\r\n                <ol className=\"tab-list\">\r\n                    {children.map((child) => {\r\n                        const {label} = child.props;\r\n\r\n                        return(\r\n                            <Tab\r\n                                activeTab={activeTab}\r\n                                key={label}\r\n                                label={label}\r\n                                onClick={onClickTabItem} />\r\n                                );\r\n                    })}\r\n                </ol>\r\n                <div className=\"tab-content\">\r\n                    {children.map((child) =>{\r\n                        if (child.props.label !== activeTab) return undefined;\r\n                        return child.props.children;\r\n                    })}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Tabs\r\n","import React, {Component} from \"react\";\r\nimport {VectorMap} from \"react-jvectormap\";\r\n\r\n\r\nclass Map extends Component{\r\n    state = {\r\n    countriesCodes: [],\r\n    countriesNames: [],\r\n    data: {},\r\n    title: \"Tantum videmus quantum scimus\",\r\n    color: \"#48aeef\"\r\n    };\r\n\r\n    handleColorChange = color => {\r\n        console.log(color.hex);\r\n        this.setState({color: color.hex});\r\n    };\r\n\r\n    handleChange = e => {\r\n        this.setState({\r\n            title: e.target.value\r\n        });\r\n    };\r\n\r\n    handleClick = (e, countryCode) => {\r\n        console.log(countryCode)\r\n        const {countriesCode} = this.state;\r\n        //if (countriesCode.indexOf(countryCode) === -1){\r\n        //    this.setState(\r\n        //        {\r\n        //            countriesCodesArray: [...countriesCode, countryCode]\r\n        //        },\r\n        //        () => this.getCountriesNamesList()\r\n        //    );\r\n        //}\r\n    };\r\n\r\n    getCountriesNamesList = () => {\r\n        const { countriesCodes } = this.state;\r\n        const list = countriesCodes;\r\n        this.setState(\r\n            {countriesNames: list},\r\n            () => this.makeMapData()\r\n            );\r\n    };\r\n\r\n    makeMapData = () => {\r\n        const {countriesCode} = this.state;\r\n        let obj = {CN: 5, MX:5, TX: 5, KR:50 }\r\n        countriesCode.forEach(countryCode => (obj[countryCode] = 5));\r\n        this.setState({\r\n            data:obj\r\n        });\r\n    };\r\n\r\n    countriesData = (country) => {\r\n        return \"One Day, I will!\"\r\n    }\r\n\r\n    render(){\r\n        const {countriesNames, data, title, titleSet, color} = this.state;\r\n        console.log(data)\r\n        return(\r\n            <div>\r\n                <VectorMap map={\"world_mill\"}\r\n                           backgroundColor={\"#0077be\"}\r\n                           onRegionClick={this.handleClick}\r\n                           containerClassName=\"wmap\"\r\n                           containerStyle={{\r\n                               width : \"100%\",\r\n                               height: \"100%\"\r\n                           }}\r\n\r\n                           regionStyle={{\r\n                               width : \"100%\",\r\n                               height: \"100%\",\r\n                               initial: {\r\n                                   fill: \"#000000\"\r\n                               },\r\n                               hover: {\r\n                                   fill: \"#eeefff\",\r\n                                   cursor: \"pointer\"\r\n                               },\r\n                               selected: {\r\n                                   blink: \"\"\r\n                               },\r\n                               selectedHover: {}\r\n                           }}\r\n                           regionsSelectable={true}\r\n                           series={{\r\n                               regions: [\r\n                                   {\r\n                                       values: data,\r\n                                       scale: [\"#146804\", \"#ee0000\"],\r\n                                       normalizeFunction: \"polynomial\"\r\n                                   }\r\n                               ]\r\n                           }}\r\n                />\r\n            <mapContainer>\r\n                <h3>{title}</h3>\r\n                <div>\r\n                    {countriesNames.map((country, i) => (\r\n                        <div key={i}> <h4>{country} </h4>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </mapContainer>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Map;\r\n","import React, {useState} from 'react';\nimport './App.css';\nimport Tabs from './components/Tabs'\nimport Map from './Worldmap'\n\nfunction App() {\n\n  let devInfo = \"I am a software engineer and developer studying in University of Southern California\"\n  let travInfo = \"I am a traveler from Seoul, South Korea, living in Los Angeles, California\"\n  let dreamInfo = \"Things that I am interested in:\"\n    let [title, titleVar] = useState([\"Cogo Labs\", \"AIMs\", \"Fasoo\"])\n    let [post, postVar] = useState([\"From June 2020 to August 2020\", \"June 2019 to August 2019\", \"June 2018 to August 2018\"])\n    let [viewP1, viewP1Var] = useState(0)\n    return (\n      <div className=\"nav\">\n        <div className=\"black-nav\">\n          <h1> Welcome to JungBok's Blog </h1>\n        </div>\n        <Tabs>\n            <h3> I am a... </h3>\n          <div label=\"Developer\">\n            <div className=\"list\">\n                <h4> {title[0]} </h4>\n                <p>{post[0]} <span onClick={() => {viewP1Var(viewP1+1)}}> viewed </span>{viewP1} </p>\n                <hr/>\n            </div>\n              <div className=\"list\">\n                  <h4> {title[1]} </h4>\n                  <p>{post[1]}</p>\n                  <hr/>\n              </div>\n              <div className=\"list\">\n                  <h4> {title[2]} </h4>\n                  <p>{post[2]}</p>\n                  <hr/>\n              </div>\n             <Modal />\n          </div>\n          <div label=\"Traveler\">\n            {travInfo}\n            <Map />\n          </div>\n          <div label =\"Dreamer\">\n            {dreamInfo}\n          </div>\n        </Tabs>\n          <footer>\n          </footer>\n      </div>\n  );\n}\nfunction Modal(){\n    return (\n        <div className=\"modal\">\n            <h2> Title </h2>\n            <p> dates </p>\n            <p> descriptions </p>\n        </div>\n    )\n}\n\nfunction WorldMap(){\n    return(\n        <div className=\"worldMap\">\n\n        </div>\n    )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}